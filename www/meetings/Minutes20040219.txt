1. Roll Call, scribe for minutes selected from attached list.

N	ATG	Jim Frost
Y	BEA Systems 	Manoj Cheenath 
N	DevelopMentor	Kevin Jones
Y	IBM	Russell Butek
N	IONA Technologies PLC 	Daniel Kulp 
N	Motorola 	Rahul Sharma 
N	Nokia	Srividya Natarajan
Y	Novell, Inc. 	Bjarne Rasmussen 
N	NTT Data Corp	Toshiyuki Kimura 
Y	Oracle	Sunil Kunisetty
N	Pramati	Rajiv Shivane
N	SAP AG 	Chavdar Baikov 
N	SeeBeyond Technology Corp. 	Ugo Corda
R	Sonic	Glen Daniels
R	Sosnoski Software	Dennis Sosnoski
Y	Sun	Marc Hadley
R	Sun	Roberto Chinnici
Y	Sun	Doug Kohlert
Y	Tmax Soft	Changshin Lee
N	WebMethods Corporation 	Christopher St. John

Marc to scribe

2. Agenda Review and AOB

No AOB.

3. Approval of Feb 12th telcon minutes

See https://jsr224.dev.java.net/meetings/Minutes20040212.txt

Approved

4. Review action items

See https://jsr224.dev.java.net/

* Glen to circulate alternate proposal for dealing with protocol
specific fault information on client and server side - pending
* Marc to think about how faults fit in with DII - pending

5. Proposal for Handlers

Continued discussion of the handler proposal, see:

https://jsr224.dev.java.net/proposals/JAXRPC_Handlers.pdf

For now Russel/Richard will retain ediorial ownership of the proposal
and will roll in comments and issue/question resolutions as they appear.

Section 3.2.3

Footnote 15: SOAP 1.2 clarifies that receiving a message with mU="true"
on a header block targetted at a role you don't play is not an error.

Bullet 6: Do we need to be able to differentiate between local and
remote origin mU faults ? mU processing is complicated by the fact that
an endpoint can map header blocks into the method signature and hence
these are implictly handled even when there is no handler registered for
that QName. Spec needs to note this explicitly and any rules on when to
generate an mU should reference the union of headers handled by handlers
and those handled by the endpoint.

Section 3.2.4.3

handleClosure method generally accepted as a good idea. Spec needs to
clarify timing of exactly when the method is called, e.g. a JMS binding
would have no message return path bu spec need to state when
handleCosure gets called.

Discussion about whether handleClosure should be called in addition to
handleResponse/handleFault or instead of.

ACTION: Sunil to provide use case / message processing flow to explain
why calling handleClosure in addition to handleFault/handleResponse is
prefereable.

Russel thinks that the currently proposed scheme would have a lower
performance impact.

Marc suggested that a change to javax.xml.rpc.handler.GenericHandler
could defer handleFault and handleResponse to the handleClosue method so
handler implementors could simply override handleClosure when they don't
need to differentiate between faults and responses.

Section 3.2.4.3.1

Footnote 20: Discussion whether JAX-RPC should take on the JSR 109
restriction about handlers not changing dispatching semantics. Marc not
convinced, its an untestable assertion. Rationalle is to prevent rogue
handlers from changing client intent. Settled on including a "SHOULD
NOT" requirement.

Footnote 21: Runtime should create an empty message.

Third bullet: Runtime should use fault info from message but if that is
not present then it should use the SOAPFaultException to create
corresponding message content. Need to unify the exception that client
sees with that in bullet 4. Why can't a client side handler throw a
fault, how does client handler inject a fault in the response ?

Fourth bullet: Why handleClosure here instead of handleFault. Need to
unify the excpetion that a client sees with the case in the third
bullet.

We ran out of time. Next week we'll continue where we left off (section
3.2.4.3.2)

---

Scribe list

An expert from the org at the top of the list is expected to scribe the
meeting. If no expert from that org is able to scribe, an expert from
the the next org on the list is expected to scribe. After one expert
from an org is scribe, the org name goes to the bottom of the list.

Motorola 
NTT 
Pramati
SAP 
SeeBeyond 
Sonic
TMax Soft
WebMethods 
ATG
IONA
Novell
Sosnoski Software
DevelopMentor
Nokia
Oracle
IBM
BEA
Sun
