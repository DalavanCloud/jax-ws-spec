Agenda:

1. Roll Call, scribe for minutes selected from attached list.

N	ATG	Jim Frost
Y	BEA Systems 	Manoj Cheenath 
N	DevelopMentor	Kevin Jones
Y	IBM	Russell Butek
N	IONA Technologies PLC 	Daniel Kulp 
N	Motorola 	Rahul Sharma 
N	Nokia	Srividya Natarajan
R	Novell, Inc. 	Bjarne Rasmussen 
N	NTT Data Corp	Toshiyuki Kimura 
Y	Oracle	Sunil Kunisetty
N	Pramati	Rajiv Shivane
Y	SAP AG 	Chavdar Baikov 
N	SeeBeyond Technology Corp. 	Ugo Corda
N	Sonic	Glen Daniels
R	Sosnoski Software	Dennis Sosnoski
Y	Sun	Marc Hadley
Y	Sun	Roberto Chinnici
Y	Sun	Doug Kohlert
N	Tmax Soft	Changshin Lee
N	WebMethods Corporation 	Christopher St. John

Marc to scribe.

2. Agenda Review and AOB

No AOB.

3. Approval of Mar 10th and 11th F2F minutes

See https://jsr224.dev.java.net/meetings/Minutes20040310.txt


4. Review action items

See https://jsr224.dev.java.net/

- Marc to think about how faults fit in with DII (pending)
- Marc to sketch out a provider interface for server side, similar to
Dispatch on client side (pending)
- Manoj to check whether JSR 181 rev 1.1 will be ready for J2EE 1.5 (done)
- Marc to write up a proposal on how handlers, services, ports etc. work (done)
- Marc to see if a F2F can be done in June with JAXB, if not then, July
(pending)


5. Provider interface for server side

Verbal update on discussions so far.

Roberto: discussed with Nick Kassem - create provider interface similar
to Dispatch interface, JBI to plug into that. Make provider appear at
same level as SEI. No need for new component model. Server side can
choose to us generated SEI or generic provider interface.
Sunil: matches what we talked about at the F2F
Roberto: Need to decide if this is only for JBI or developers in general
- if developers then this should be similar to Dispatch.
Russel: Should be SPI
Roberto: Could put it in a 'spi' package to discourage normal users.
Provider interface is quite high in the stack.
Sunil: How much of provider is WSDL aware ? Should provider give WSDL to
implementation.
Roberto: Implicitly saying there is a WSDL for the endpoint. Allows
other components to build on this endpoint.
Russel: Should provider be defined in JAX-RPC or in 109
Roberto: Not in 109 territory, just like a normal SEI
Richard: How to dispatch ?
Roberto: Runtime checks for provider interface and dispatches to that if
implemented
Richard: Provider name isn't great, dispatcher might be better.
Clarrifies that its two sides on one interface.
Sunil: likes provider - similar to Axis usage
Roberto: Dispatcher on server doesn't seem right, impl isn't dispatching
as such, tie is a dispatcher.
Richard: doesn't want to derail the current direction, see how the
interfaces turn out.

ACTION: Marc and Roberto to send out written proposal


6. Services, ports, bindings & stubs/call/disptach relationship

See: http://archives.java.sun.com/cgi-bin/wa?A2=ind0403&L=jsr-224-eg&F=&S=&X=4E4E905B55420E84F0&P=1384

Roberto: first question is what are bindings. WSDL has a clear concept
of binding, do we mirror that in JAX-RPC.
Chavdar: 
Roberto: WSDL 2.0 simplifies things since can only have one interface
per service.
Sunil: Do you mean Stub or DII Call or ...
Roberto: port as in WSDL. As Bjarne pointed out a stub has additional
properties. Agrees with Sunil comment that Stub properties should be
independent. Binding instances separate.
Sunil: Can we change the binding on a Stub - Oracle position is no.
Roberto: Separate binding from address. Fix binding on Stub, but address
is mutable. 
Sunil: Switching between SOAP 1.1 and SOAP 1.2 - would we allow this ?
Roberto: Is there any need for this, its just a shortcut - would have
different port in WSDL anyway.
Roberto: point (ii) in Marc's note. Stubs are 
Chavdar: Thread safety could be tricky if port changes under them
Russel: changing address effectively creates a new port
Roberto: a shortcut to going back to the Service to get a new stub for
the new port. Asking for trouble adding in such shortcuts ?
Sunil: new port is only conceptual, not actual
Russel: Or we could disallow changing address on a stub.
Sunil: need that functionality
Russel: changing the address, changes the port
Sunil: descibes use case for changing the address but not the port
Roberto: two elements - stubs are independent of each other
Richard: related to handler registry - how to put different handlers on
a new stub. Generate new qname for new port lets this happen
Roberto: how to determine QName of new port
Richard: ask the stub
Roberto: so create a stub, change endpoint address, get port name and
then go back to service to change handlers
Chavdar: handlers are stateless so why create a new chain if binding is
the same
Richard: to change the handlers that are in it - new address might have
new requirements
Roberto: seems to make the common case harder, want to talk to two
identical services on different endpoint addresses
Russel: will have different ports for each
Roberto: Common case is not to have port specific handlers so chnaging
endpoint doesn't have any effect on handlers
Russel: yes default is to clone existing port
Roberto: perhaps set address first and keep port qname but can also
change port name that regenerates handler chain.
Roberto: Marc's point (iii). WSDL 2.0 allows for generic bindings that
have no interface specific properties. 
Sunil: need both handler specific to type of binding or instance of
specific binding
Richard: Really only have one binding per port so don't think we need
per binding per port handler chain.
Sunil: Have handler registry at the binding and we are done
Roberto: How would this meet the requirements
Sunil: allows to add or remove handlers defined at the service level
Roberto: add and remove or just add ?
Sunil both
Richard: Use case for this ?
Sunil: turning off a handler for a particular port
Roberto: today have to set up handler for each port anyway
Richard: should wait until the new handler draft is available

ACTION: Roberto to clarify question in point (iii)


8. Proposal for Handlers

Update from Russel/Richard on current status.

Richard: expects new draft early next week.

---

Scribe list

An expert from the org at the top of the list is expected to scribe the meeting. If no expert from that org is able to scribe, an expert from the the next org on the list is expected to scribe. After one expert from an org is scribe, the org name goes to the bottom of the list.

Motorola 
NTT 
Pramati
SAP 
SeeBeyond 
TMax Soft
WebMethods 
ATG
IONA
Sosnoski Software
DevelopMentor
Nokia
Oracle
BEA
IBM
Sonic
Novell
Sun
