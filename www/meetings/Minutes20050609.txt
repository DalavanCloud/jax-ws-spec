Minutes for the JSR 224 telcon on 9 June, 2005. Start time is noon PT,
3pm ET, 9pm central Europe. Scheduled duration is 1 hour. Call in
number: 1 865 525 0765, access code: 4669616, security code 2302.

Agenda:

1. Roll call

Marc, Chavdar, Brian, Doug, Greg, Chen, Roberto, Ugo, Bjarne

2. Approval of draft minutes

https://jsr224.dev.java.net/meetings/Minutes20050526.txt - Approved

3. Agenda bashing and AOB

4. Changes for Public Draft

1) Add the javax.xml.ws.Endpoint and javax.xml.ws.EndpointFactory classes
5) Add property bag to javax.xml.ws.Endpoint
6) Add WSDL_PORT and WSDL_SERVICE properties to javax.xml.ws.Endpoint

No discussion, changes accepted.

2) Rename javax.xml.ws.Service.createPort method to Service.addPort

No discussion, changes accepted.

3) Add methods to javax.xml.ws.soap.SOAPBinding to turn MTOM on and
off programmatically

Expect WSDL annotation to control MTOM by the time we go final, but methods would also be useful. Question whether we should define additional properties to control threshhold for MTOM ? This could be a vendor extension rather than part of the standard.

No further discussion, changes accepted.

4) Add Executor property to javax.xml.ws.Service and javax.xml.ws.Endpoint

No discussion, changes accepted.

7) Remove the getHttpMethod() and setHttpMethod(HTTP_METHOD method)
methods from javax.xml.ws.http.HttpBinding; also remove the
HttpBinding.HTTP_METHOD enumeration type; add a HTTP_METHOD property
to javax.xml.ws.MessageContext whose full name is "javax.xml.ws.http.method"

No discussion, changes accepted.

8) Refactoring SOAPFaultException to use SOAPFault

Question whether to make the class final, concern is that subclasses might add properties that don't get serialized. Rather than make it final we'll add a comment in the Javadoc noting that the embedded SOAPFault is the only thing serialized.

Change accepted.

9) Public Draft Planning

PMO deadline: Spec needs to be submitted by Thursday 16th to be posted before JavaOne. Voting Jul 11th to 18th. If we miss this deadline then will have to delay by several weeks.

Plan to circulate Javadocs today with changes above and specification by end of the weekend. Discuss any issues over email in following 3 or 4 days.

