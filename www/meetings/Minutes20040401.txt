1. Roll Call, scribe for minutes selected from attached list.
N          ATG     Jim Frost
N          BEA Systems   Manoj Cheenath
N          DevelopMentor  Kevin Jones
N          IBM      Russell Butek
N          IONA Technologies PLC            Daniel Kulp
N          Motorola           Rahul Sharma
N          Nokia    Srividya Natarajan
Y          Novell, Inc.        Bjarne Rasmussen
N          NTT Data Corp  Toshiyuki Kimura
Y          Oracle  Sunil Kunisetty
N          Pramati Rajiv Shivane
Y          SAP AG           Chavdar Baikov
N          SeeBeyond Technology Corp.    Ugo Corda
Y          Sonic    Glen Daniels
R          Sosnoski Software        Dennis Sosnoski
Y          Sun      Marc Hadley
Y          Sun      Roberto Chinnici
Y          Sun      Doug Kohlert
N          Tmax Soft         Changshin Lee
N          WebMethods Corporation          Christopher St. John

Chavdar to scribe.

2. Agenda Review and AOB
    Accepted with no changes.

3. Approval of Mar 10th and 11th F2F minutes and Mar 25th telcon minutes

See https://jsr224.dev.java.net/meetings/Minutes20040310.txt

Aprooved (with changes from JAXB e.g. expert)

4. Review action items

See https://jsr224.dev.java.net/

- Marc to think about how faults fit in with DII   (done)
- Roberto and Marc to send out a written proposal for a server side 
provider interface, similar to Dispatch on client side  (pending)
- Marc to see if a F2F can be done in June with JAXB, if not then, July 
(pending)
- Roberto to clarify question in point (iii) in Marc's mail re how 
handlers, services, ports etc. work  (will be discussed in the mailing
lists)

5. Faults in DII

Mark: Still no responses on the mailing list. Are, there any comments?
Sunil: If JAXBException occurs on marshalling and unmarshaling what will happen?
Mark: Throw JAXRPCException and JABException as a cause.
Suggestion: Throw JAXRPC exception and make the content accessible to
the processor.
Mark: Put another exception as a cause?
-Can't we use existing exceptions, like UnmarshalingException? -There
may be issues transferring information between JAXB and the JAX-RPC
runtime -The JAXB does not define a way of transferring exception
information to the processor.
  ?- If the unmarshalling fails it is not clear how to transfer the
information to the upper layer (JAX-RPC).
  ?- If the information comes from a stream you can not fallback or
finish information reading.
  ?- There might be a need to add a JAXB option that tells it to enable
a way of handing the information to the upper level in failure.
  Comment: This might be very expensive.
  We should send a mail to JAXB asking their position.
  Roberto: It is difficult to say what information is required to be
elevated to the JAX-RPC user.
   Question: What happens when some handler tries to deserialize some
header with JAXB it must be clear, how to proceed when error happens.
   Mark: We should invite the JAXB EG lead to our meeting.
   Sunil suggests, setting JAXBException as a cause of the JAXRPCException.

  Action Item: Roberto will contact to JAXB on their position on
UnmarshallingException
  Mark: Invite the JAXB EG Lead on next JAX-RPC meeting.
  We agreed to settle the issue ,that if there's a JAXB exception during
unmarshalling then we will throw a JAXRPCException with the JAXB
exception as the cause.
  It remains an open question , how much information the JAXB exception
will provide.

6. JAXBContext in Dispatch methods

Can we decide whether JAXBContext should be in Disptach methods or a
property of the JAXRPCContext. Do we collapse the separate methods for
JAXB objects and Source into one or keep them separate. See thread at:
http://archives.java.sun.com/cgi-bin/wa?A1=ind0403&L=jsr-224-eg#12

Mark: We could simplify the Async API by setting the JAXBContext as a
property of the JAXRPContext. Roberto : If we pass just an object it's
confusing what the result should be. Is it supposed to be Source if the
parameter is a Source.
Mark: Do we think that we should  drop the JAXBContext and set is as a
prop. of the JAXRPCContext.
Sunil: If we remove the JAXBContext and use the Source we should define
the result of the change.
Question: Can we set the JAXRPCContext to the Dispatch  as an object ?
Mark: We could do that way.
Suggestion: We can have levels of properties, and every Dispatch object
can have its own additional properties which it appends to the context
properties.
Question: Why would we want for outbound messages go have MessageContext
and RAXRPCContext.
Mark: So what the handlers do, is not visible to the framework. You can
write yourself a handler that copy information from MessageContext to
the JAXRPCContext.
Question: If the same context is passed to 3 dispatches what happens then
Mark: It's supposed the context is copied on invoke, and returned with
updated settings.
Suggestion: You can set copy of the same JAX-RPC context to different dispatches
Question: Why the JAX-RPC uses its own JAXBContext. Is it possible to
get it from outside?
Suggestion: There is no way to reuse JAXBContext in JAX-RPC, from
external source, it might contain incompatible information.
Roberto: There might be compatibility issues. The JAB implementation
might be tightly integrated with JAX-RPC implementation and they might
use some properties that are not interoperable to outside JAXB
implementation.

We decided to remove the JAXBContext parameter and add it as a property
of the JAXRPCContext. We decided to collapse the two different JAXB and
Source based methods into a single Object based method. "Different
parameter - different method behaviour" problem is solved by using
generalisation (fall back to the lowest common applicable)

Keeping the JAXRPContext as parameter or set it to the Dispatch?
Action Item: Glen will start a mailing thread on this.

Question rose about the RPC style document WSDL-s.(representation of
document style structures as rpc calls) using un-boxing. JAXB delivers
just the wrapper structures in document literal style. It is possible
just to pass single JAXB wrapper object to the methods instead of
unwrapping the complex content (discussion will continue on the mailing
lists)

7. Services, ports, bindings & stubs/call/dispatch relationship

A new version of the handler proposal was released and it contains some
new ideas on the above relationship. We need to close on this issue and
move forward. There's a short thread of discussion at:
http://archives.java.sun.com/cgi-bin/wa?A1=ind0403&L=jsr-224-eg#11

(will be discussed in the mailing lists)

8. Proposal for Handlers

Time permitting we'll start gathering other comments on the latest
version of the handler proposal.


---

Scribe list

An expert from the org at the top of the list is expected to scribe the
meeting. If no expert from that org is able to scribe, an expert from
the the next org on the list is expected to scribe. After one expert
from an org is scribe, the org name goes to the bottom of the list.

Motorola
NTT
Pramati
SeeBeyond
TMax Soft
WebMethods
ATG
IONA
Sosnoski Software
DevelopMentor
Nokia
Oracle
BEA
IBM
Sonic
Novell
Sun
SAP
