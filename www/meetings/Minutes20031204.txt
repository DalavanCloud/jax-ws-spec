JAX-RPC 2.0 EG Conference Call 12/04.

1. Roll Call, scribe for minutes selected from attached list.

(Y - present, N - absent, R - regrets)

R	ATG			Jim Frost
Y	BEA Systems 		Manoj Cheenath 
Y	IBM			Russell Butek
N	IONA 			Daniel Kulp 
N	Motorola 		Rahul Sharma 
R	Novell, Inc. 		Bjarne Rasmussen 
R	NTT Data Corp		Toshiyuki Kimura 
Y	Oracle			Sunil Kunisetty
N	Pramati			Rajiv Shivane
Y	SAP AG 			Chavdar Baikov 
N	SeeBeyond		Ugo Corda
N	Sonic Software		Glen Daniels
N	Sosnoski Software	Dennis Sosnoski
R	Sun			Marc Hadley
Y	Sun			Roberto Chinnici
Y	Sun			Doug Kohlert
N	Tmax Soft		JaeWoong Chung
N	WebMethods		Prasad Yendluri 

Sunil to scribe

2. Agenda Review and AOB

Sunil reminded that we need to add the BP thing to the agenda. Decided to do that in the next call.

Roberto  briefly discussed about the possibility of a  F2F in Jan/Feb '04. Will talk to Marc about this.

3. Approval of Nov 20th telcon minutes

Approved.

4. Review action items

See https://jsr224.dev.java.net/

* Roberto to add information to issue #8 re serializable requirement for method params - done
* Glen to circulate alternate proposal for dealing with protocol specific fault information on client and server side - pending
* Marc to put Sunil proposal for JAX-RPC explicit WS-I conformance changes on future agenda -pending, will discuss next week
* Roberto to send note on DII enhancements / SAAJ overlap - pending
* Russell to send proposal for improving handler framework - pending

5. Async API Proposals

Toshiyuki and Sunil will present their respective proposals see:

http://archives.java.sun.com/cgi-bin/wa?A2=ind0311&L=jsr-224- eg&F=&S=&X=5A5ABF697AD87D033E&P=2263

and

http://archives.java.sun.com/cgi-bin/wa?A2=ind0311&L=jsr-224- eg&F=&S=&X=5A5ABF697AD87D033E&P=2026

Note that JSR 166 provides facilities for asynchrony and we should decide if/how to integrate with these.

Sunil walked thru' his proposal briefly.

Roberto: What about Service/Server side asynchrony?

Sunil: This proposal only covers client side stuff as I thought
         EG agreed only client side asynchrony as the requirement.

Roberto: Lets deal with server side later then.

Roberto: It will be better to call 'close' on AsyncResponse as 'cancel' - to be consistent with Future

Sunil: Shouldn't be a problem. We just  felt 'close' is more appropriate.

Roberto: There may be some Usability issues if the async method takes a java.utils.Properties as an additional argument. Could conflict with methods that already have this parameter type.

Sunil: Agrees. We can have a specialized class. Our initial proposal had something like AsyncInfo.

Manoj:  Instead of 2 async methods, we could make them just one.
 
Sunil:  Callback will be like Callback and Poll then. That will be very confusing as

Sunil:  Could have some bootstrapping issues as the  type-safe Callback has to be generated at runtime.

Roberto: Bootstrapping won't be an issue as the type-safe Callback interface will be generated by Tools even in the dynamic proxy case just as SEI.

Roberto: Likes Manoj's Option 2.

Manoj:  Not type safe callback/poll handlers in Sunil's proposal is problem for us.

Roberto: What happens if getAsyncResponse() is called before response is actually realized
     Manoj: Will block until it is realized.
     Sunil:  Will throw an exception
     Roberto: May be we should block like JSR 166's Future.get

Sunil: What is the status of JSR 166 and is it going to be included in j2se 1.5

Roberto: Yes, it will be part of j2se 1.5 and I believe it is in community or public draft.
 
Roberto: Why is replyTo needed for R-R case'?
 Sunil:   Though replyTo may be needed for R-R case, it should be done transparently by runtime and user should not procide it.
 Roberto: I agree
 Manoj:  To reflect WSDL bindings
             [I didn't fully get what Manoj said here].
 Roberto: I don't see a use case
