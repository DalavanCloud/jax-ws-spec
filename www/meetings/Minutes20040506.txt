JSR 224 EG May 6 2004

1. Roll Call: Sunil(Oracle), Dennis(Sosnoski Software), Marc(Sun),
Roberto(Sun), Richard(IBM), Doug(Sun)

2. Agenda Review and AOB

Richard: Comment on JAX-RPC/JBI integration. JAX-RPC 2.0 is primarily
for J2EE 1.5 which does not include JSR 208. Suggests that API work for
JAX-RPC/JBI integration should be out of scope for JAX-RPC 2.0.
Marc: Our suggested approach for integration does not require API
changes for JBI, its an implementation approach.

3. Approved last telcon minutes

4. Review action items

- Roberto and Marc to send out a written proposal for a server side
provider interface, similar to Dispatch on client side
   This will not be done for the Early Draft.

- Marc to see if a F2F can be done in June with JAXB, if not then, July 
           JAXB would like to do a F2F in the beginning of August.

- Roberto will summarize discussion on JAXB UnmarshallingException capabilities
   This was done.


5. Review latest draft:

Marc will add a requirement that child elements of a wrapper type can't
be of type choice or substitution group.

Marc will remove the requirement that namespace of a wrapper element
must match the targetNamespace of WSDL. Only the localname will be
required to compare against the operation name.


section 2.3.1 page 12:

Discussion about the Editor's note: Should we require the response
element to match the wrapper style?

Marc proposed to require that both the request and response elements
must match wrapper style.
Sunil is going to ponder this.


Section 2.3.1

Sunil: Do we need an "rpc" section here.
Sunil: will think about this some more.
Marc: For now will leave it as is.


Java->WSDL

Mapping of overloaded method names:
Sunil has questions about how this would work with 109 dd.
Sunil checked, 109 mapping file has a way to set the method name so no
problem on the server. May still be a problem on the client.
Marc: JSR 181 will let you customize operation names.
Roberto: Suggest we use 181 metadata to resolve this issue.
Marc: Should we have a requirement that if there are overloaded method
names you must provide such annotations.
Roberto: Will will have to take into consideration 109 mapping files and
annotations and how do we consider both.
Marc: Will add some language stating that you can use metadata (e.g. 181)
Sunil: Has concerns about referencing 181 before it is blessed.
Doug: What about existing classes?
Marc: You can use 109 mapping file. On client it is not a problem.
Sunil: Is concerned that between 2 implementations the operation names
will not be the same. Also, it would not be able to round-trip.
Roberto: suggests that you could use information not stored in the WSDL.


Client APIs

Sunil: Suggested that the Service interface MUST implement
java.io.Serializable and javax.naming.Referenciable
Marc: I don't see any harm in requiring it.
Marc: I will make it a MUST

6. SOAP Handler Framework

Richard: I have question about this section. getHeaders - is this a
compatibility? Roberto: Yes
Richard: HandleResponse and HandleFault- do we want this distinction?
Marc: AbstractHandler will be subclasses by protocol specific handlers.
Most protocols have a notion of a fault case. More of a convenience than
anything else. Richard: There are cases where there is no response.
Marc: Yes, but you might get a HandleFault.
Marc: There has been discussion on when handleClosure should be called.
handleClosure will always need to be called.
Roberto: These three cases are similar to try, catch and finally blocks.
Marc: WSDL 2.0 calls out fault messages differently than normal messages.
Roberto: MEP may specify fault generation rules where the request
triggers a fault in a special way.
Sunil: Can have a message direction added as a parameter. This is just a
convenience thing.
Richard: I don't like adding parameters. There might be a number of
combinations that could be used for such parameters. We could use
properties on the context.
Sunil: Generally agrees, but feels that this is an important parameter
that should not be overlooked.
Richard: They are all important parameters. Especially in MEPs where
there is only direction.
Roberto: WSDL specifies in/out in terms and the service, so on the
client "in" would really mean "out".
Marc: Thinks that the client should not have in/out reversed like that.
Marc: This information is needed. I think the MessageContext is the place.
Roberto: I agree.
Richard: I agree.
Sunil: I agree it should be available. It is OK not to be a parameter. I
just wanted to stress that it is a very important piece of information
that should not be overlooked.
Marc: Maybe we can add some convenience accessors for some of these properties.
Sunil: We must be careful on what properties are read only etc.
Marc: Handlers are very powerful. It might make sense to make some read
only. But a certain handler, such as a caching handler would need to
change these properties.
Richard: The runtime should change those properties in this case.
Marc: OK, bad example
Marc: will consider read only policy for properties.


Next steps:
Marc: Plans on flushing out Handler proposal into a chapter in the spec
in the next couple weeks.

After incorporating any comments, we should be able to do an early draft
in late may.

After that we'll address the following. Basic Profile 1.1, Attachment
Profile 1.0, SOAP 1.2. WSDL 2.0.


